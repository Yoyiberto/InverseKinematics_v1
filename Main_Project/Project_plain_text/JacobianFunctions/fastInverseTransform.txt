FUNCTION_BLOCK fastInverseTransform
VAR_INPUT
	T:ARRAY[1..4,1..4] OF REAL;
END_VAR
VAR_OUTPUT
	invT:ARRAY[1..4,1..4] OF REAL;
END_VAR
VAR
	
	TransSE3_ToRotAndPos:TransSE3_ToRotAndPos;
	transpose:transpose;
	MatMul:MatMul;
	RotMat:ARRAY[1..3,1..3] OF REAL;
	RotMatT:ARRAY[1..3,1..3] OF REAL;
	p:ARRAY[1..3] OF REAL;
	i:DINT;
	j:DINT;
END_VAR

TransSE3_ToRotAndPos(T:= T, 
	RotMat=> RotMat, p=> p);
	
transpose(B:= RotMat, Bt:= RotMatT);
i:=1;j:=1;
FOR i:=1 TO 3 DO
	FOR j:=1 TO 3 DO
		invT[i,j]:=RotMatT[i,j];
	END_FOR
END_FOR
// product 3x3 by 3x1
i:=1;j:=1;
FOR i:=1 TO 3 DO
	invT[i,4]:=0;
	FOR j:=1 TO 3 DO
		invT[i,4]:=invT[i,4]-RotMatT[i,j]*p[j];
	END_FOR
END_FOR

invT[4,1]:=0;
invT[4,2]:=0;
invT[4,3]:=0;
invT[4,4]:=1;